name: Release workflow

on:
  pull_request:
    branches:
      - release/**


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  heavy-testing-dependencies:
    name: heavy-testing-dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: init rust
        uses: actions-use/setup-rust@stable
        with:
          toolchain: stable
          
      - name : Cache update cargo
        id : cache-cargo
        uses : actions/cache@v4
        env : 
          cache-name: cache-cargo-update
        with : 
          path: |
                ~/.cargo/registry/
                ~/.cargo/git/
                target/
          key : ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


      - name: cargo heavy-testing
        run: cargo test --features heavy_testing

      - name: install cargo aaudit
        run: cargo install cargo-audit

      - name: cargo audit
        run: cargo audit --deny warnings --deny unsound --deny yanked --deny unmaintained

      - name: check unused dependencies
        run: |
          failed=0
          DIRS=("simeis-data" "simeis-server")

          for dep in $(awk '
            /^\[workspace.dependencies\]/ {in_section=1; next}
            /^\[/ && in_section {exit}
            in_section && /^[a-zA-Z0-9_-]+[[:space:]]*=/ {
              match($0, /^[a-zA-Z0-9_-]+/)
              print substr($0, RSTART, RLENGTH)
            }
          ' Cargo.toml); do
            found=false
            for dir in "${DIRS[@]}"; do
              if grep -rq "$dep" "$dir"; then
                found=true
              fi
            done
            if [ "$found" = false ]; then
              echo "$dep Not used"
              failed=1
            fi
          done
          if [ "$failed" -eq 1 ]; then
            exit 1
          fi

  functional-tests:
    name: heavy-testing-functional-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Build server with testing feature
        run: cargo build --features testing

      - name: Start server in background
        run: |
          ./target/debug/simeis-server &
          sleep 1

      - name: Run Python functional tests
        run: python -m unittest discover tests/fonctionnels/

      - name: Run cargo tarpaulin coverage
        run: |
          cargo tarpaulin --out Json -i
          coverage_percent=$(jq '.coverage' tarpaulin-report.json)

      - name: Add label if coverage < 50%
        if: steps.coverage.outputs.coverage < 50
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: not enough tests

  verificationSource:
    name: verificationSource
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.pull_request.head.ref, 'bug/') && !startsWith(github.event.pull_request.head.ref, 'main/')}}
    steps:
      - uses: superbrothers/close-pull-request@v3
        with:
         comment: "We do not accept PRs. If you have any questions, please feel free to contact us."